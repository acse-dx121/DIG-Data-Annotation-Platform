<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.uestc.labelproject.dao.AdminTaskMapper">

    <resultMap id="BaseResultMap" type="com.uestc.labelproject.entity.Task">
        <id column="task_id" jdbcType="BIGINT" property="taskId" />
        <result column="task_name" jdbcType="VARCHAR" property="taskName" />
        <result column="task_desc" jdbcType="VARCHAR" property="taskDesc" />
        <result column="image_number" jdbcType="INTEGER" property="imageNumber"/>
        <result column="task_type" jdbcType="INTEGER" property="taskType"/>
        <result column="finish" jdbcType="INTEGER" property="finish"/>
        <collection property="userIds" ofType="Long" select="selectUserId" column="task_id">
            <result column="user_id" jdbcType="BIGINT"/>
        </collection>
        <collection property="labelIds" ofType="Long" select="selectLabelId" column="task_id">
            <result column="label_id" jdbcType="BIGINT"/>
        </collection>
        <collection property="reviewerIds" ofType="Long" select="selectReviewerId" column="task_id">
            <result column="reviewer_id" jdbcType="BIGINT"/>
        </collection>
    </resultMap>
    <resultMap id="BaseUserMap" type="com.uestc.labelproject.entity.Task">
        <id column="task_id" jdbcType="BIGINT" property="taskId" />
        <result column="task_name" jdbcType="VARCHAR" property="taskName" />
        <result column="task_desc" jdbcType="VARCHAR" property="taskDesc" />
        <result column="image_number" jdbcType="INTEGER" property="imageNumber"/>
        <result column="task_type" jdbcType="INTEGER" property="taskType"/>
        <collection property="labelIds" ofType="Long">
            <result column="label_id" jdbcType="BIGINT"/>
        </collection>
    </resultMap>
    <resultMap id="BaseTaskMap" type="com.uestc.labelproject.entity.Task">
        <id column="task_id" jdbcType="BIGINT" property="taskId" />
        <result column="task_name" jdbcType="VARCHAR" property="taskName" />
        <result column="task_desc" jdbcType="VARCHAR" property="taskDesc" />
        <result column="image_number" jdbcType="INTEGER" property="imageNumber"/>
        <result column="task_type" jdbcType="INTEGER" property="taskType"/>
        <result column="finish" jdbcType="INTEGER" property="finish"/>
        <collection property="users" select="com.uestc.labelproject.dao.AdminTaskMapper.getUserInfo" column="task_id"/>
        <collection property="reviewers" select="com.uestc.labelproject.dao.AdminTaskMapper.getReviewerInfo" column="task_id"/>
    </resultMap>
    <resultMap id="BaseUserInfoMap" type="com.uestc.labelproject.entity.UserInfo">
        <result column="username" jdbcType="VARCHAR" property="username"/>
        <result column="labeled" jdbcType="BIGINT" property="labeled"/>
        <result column="user_id" jdbcType="BIGINT" property="userId"/>
    </resultMap>
    <resultMap id="BaseReviewerInfoMap" type="String">
        <result column="username" jdbcType="VARCHAR"/>
    </resultMap>
    <resultMap id="NewTask" type="com.uestc.labelproject.entity.Task">
        <id column="task_id" jdbcType="BIGINT" property="taskId"/>
        <result column="task_type" jdbcType="INTEGER" property="taskType"/>
        <result column="task_name" jdbcType="VARCHAR" property="taskName"/>
    </resultMap>

    <sql id="insertKey">
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="taskName != null">
                task_name,
            </if>
            <if test="taskDesc != null">
                task_desc,
            </if>
            <if test="imageNumber != null">
                image_number,
            </if>
            <if test="taskType != null">
                task_type,
            </if>
                is_created
        </trim>
    </sql>
    <sql id="insertValue">
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="taskName != null">
                #{taskName},
            </if>
            <if test="taskDesc != null">
                #{taskDesc},
            </if>
            <if test="imageNumber != null">
                #{imageNumber},
            </if>
            <if test="taskType != null">
                #{taskType},
            </if>
                0
        </trim>
    </sql>
    <select id="getImageTaskNameList" resultType="String">
        select task_name from task where task_type &gt;= 1 and task_type &lt;= 4
    </select>
    <select id="getVideoTaskNameList" resultType="String">
        select task_name from task where task_type = 5
    </select>

    <insert id="addTask" parameterType="com.uestc.labelproject.entity.Task">
        <selectKey keyProperty="taskId" order="AFTER" resultType="java.lang.Long">
            SELECT  LAST_INSERT_ID()
        </selectKey>
        insert into task <include refid="insertKey"/> <include refid="insertValue"/>
    </insert>

    <select id="selectUserId" parameterType="Long" resultType="Long">
        select user_id from taskuserinfo where task_id = #{task_id}
    </select>
    <select id="selectLabelId" parameterType="Long" resultType="Long">
        select label_id from tasklabelinfo where task_id = #{task_id}
    </select>
    <select id="selectReviewerId" parameterType="Long" resultType="Long">
        select reviewer_id from taskreviewerinfo where task_id = #{task_id}
    </select>
    <select id="getTaskList" resultMap="BaseResultMap">
        select t.task_id,
               t.task_name,
               t.image_number,
               t.task_type,
               (select count(*) from image i where i.task_id = t.task_id and i.user_confirm_id is not null) finish,
               t.task_desc
        from task t where t.is_created = 1
    </select>

    <select id="getTaskById" resultMap="BaseResultMap" parameterType="Long">
        select t.task_id,
               t.task_name,
               t.image_number,
               t.task_desc,
               t.task_type,
               (select count(*) from image i where i.task_id = t.task_id and i.user_confirm_id is not null) finish
        from task t where t.task_id = #{taskId}
    </select>

    <insert id="addTaskUserIds">
        insert into taskuserinfo (task_id, user_id) values
        <foreach collection="userIds" item="userId" separator=",">
            (#{taskId}, #{userId})
        </foreach>
    </insert>
    <insert id="addTaskLabelIds">
        insert into tasklabelinfo (task_id, label_id) values
        <foreach collection="labelIds" item="labelId" separator=",">
            (#{taskId}, #{labelId})
        </foreach>
    </insert>
    <insert id="addTaskReviewerIds">
        insert into taskreviewerinfo (task_id, reviewer_id) values
        <foreach collection="reviewerIds" item="reviewerId" separator=",">
            (#{taskId}, #{reviewerId})
        </foreach>
    </insert>

    <select id="getTaskNameById" parameterType="Long" resultType="String">
        select task_name from task where task_id = #{taskId}
    </select>

    <delete id="deleteTaskUserIds" parameterType="Long">
        delete from taskuserinfo where task_id = #{taskId}
    </delete>
    <delete id="deleteTaskLabelIds" parameterType="Long">
        delete from tasklabelinfo where task_id = #{taskId}
    </delete>
    <delete id="deleteTaskReviewerIds" parameterType="Long">
        delete from taskreviewerinfo where task_id = #{taskId}
    </delete>
    <delete id="deleteTask" parameterType="Long">
        delete from task where task_id = #{taskId}
    </delete>

    <update id="updateTask" parameterType="com.uestc.labelproject.entity.Task">
        update task
        <set>
            <trim>
                <if test="taskName != null">
                    task_name = #{taskName},
                </if>
                <if test="taskDesc != null">
                    task_desc = #{taskName},
                </if>
            </trim>
        </set>
        where task_id =  #{taskId}
    </update>

    <select id="getTaskNameByImageId" parameterType="Long" resultType="String">
        select task_name from task where task_id = (select task_id from image where image_id = #{imageId})
    </select>

    <select id="getTaskIds" parameterType="Long" resultType="Long">
        select task_id from taskuserinfo where user_id = #{userId}
    </select>

    <select id="getTaskListById" resultMap="BaseUserMap">
        select t.task_id,
        t.task_name,
        t.image_number,
        t.task_type,
        tl.label_id,
        t.task_desc
        from task t
        left join tasklabelinfo tl on tl.task_id = t.task_id
        where t.task_id in
        <foreach collection="taskIds" item="taskId" open="(" separator="," close=")">
            #{taskId}
        </foreach>
    </select>
    <select id="getTaskIdsByReviewerId" parameterType="Long" resultType="Long">
        select task_id from taskreviewerinfo where reviewer_id = #{reviewerId}
    </select>

    <select id="taskList" resultMap="BaseTaskMap">
        select t.task_id task_id,
               t.task_name,
               t.image_number,
               t.task_type,
               if(task_type = 5,(select count(*) from video v where v.task_id = t.task_id and v.user_confirm_id is not null),(select count(*) from image i where i.task_id = t.task_id and i.user_confirm_id is not null))finish,
               t.task_desc
        from task t where t.is_created = 1
    </select>

    <select id="getUserInfo" resultMap="BaseUserInfoMap" parameterType="Long">
        select u.username, u.user_id, (select count(*) from userfinished uf where u.user_id = uf.user_id and uf.task_id = #{taskId}) labeled
        from user u where u.user_id in (select tu.user_id from taskuserinfo tu where tu.task_id = #{taskId})
    </select>

    <select id="getReviewerInfo" resultMap="BaseReviewerInfoMap" parameterType="Long">
        select u.username from user u where u.user_id in (select tr.reviewer_id from taskreviewerinfo tr where tr.task_id = #{taskId})
    </select>

    <select id="taskListById" resultMap="BaseTaskMap">
        select t.task_id task_id,
               t.task_name,
               t.image_number,
               t.task_type,
               (select count(*) from image i where i.task_id = t.task_id and i.user_confirm_id is not null) finish,
               t.task_desc
        from task t
        where t.task_id in
        <foreach collection="taskIds" item="taskId" open="(" separator="," close=")">
            #{taskId}
        </foreach>
    </select>
    <select id="getTaskIdsByLabelId" resultType="Long">
        select t.task_id from task t where t.task_type = #{taskType} and t.task_id in (select l.task_id from tasklabelinfo l where label_id = #{labelId})
    </select>

    <select id="searchTask" parameterType="String" resultMap="BaseResultMap">
        select t.task_id,
               t.task_name,
               t.image_number,
               t.task_type,
               (select count(*) from image i where i.task_id = t.task_id and i.user_confirm_id is not null) finish
        from task t where t.is_created = 1 and t.task_name like concat('%',#{keyword},'%')
    </select>

    <select id="getNewTaskList" resultMap="NewTask">
        select task_id,task_type,task_name from task where is_created = 0
    </select>

    <update id="updateTaskType" >
        update task
        <set>
            <trim>
                <if test="taskType != null">
                    task_type = #{taskType},
                </if>
                    is_created = 1
            </trim>
        </set>
        where task_id =  #{taskId}
    </update>

    <select id="hasData" parameterType="Long" resultType="int">
        select count(*) from imagedata where image_id in (select i.image_id from image i where i.task_id = #{taskId}) limit 1
    </select>
</mapper>