<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.uestc.labelproject.dao.AdminVideoMapper">
    <resultMap id="BaseVideoMap" type="com.uestc.labelproject.entity.Video">
        <id column="video_id" jdbcType="BIGINT" property="videoId"/>
        <result column="video_name" jdbcType="VARCHAR" property="videoName"/>
        <result column="video_thumb" jdbcType="VARCHAR" property="videoThumb"/>
        <result column="task_id" jdbcType="BIGINT" property="taskId"/>
        <result column="video_length" jdbcType="DOUBLE" property="duration"/>
        <result column="user_confirm_id" jdbcType="BIGINT" property="userConfirmId"/>
    </resultMap>
    <resultMap id="BaseVideoDataMap" type="com.uestc.labelproject.entity.VideoData">
        <id column="data_id" jdbcType="BIGINT" property="dataId"/>
        <result column="video_id" jdbcType="BIGINT" property="videoId"/>
        <result column="label_id" jdbcType="BIGINT" property="labelId"/>
        <result column="user_id" jdbcType="BIGINT" property="userId"/>
        <result column="start_time" jdbcType="DOUBLE" property="startTime"/>
        <result column="end_time" jdbcType="DOUBLE" property="endTime"/>
        <result column="type" jdbcType="INTEGER" property="type"/>
        <result column="sentence" jdbcType="VARCHAR" property="sentence"/>
    </resultMap>

    <insert id="addVideos">
        insert into video(video_name, user_confirm_id, task_id,duration) VALUES
        <foreach collection="videos" item="video" separator=",">
            (#{video.videoName}, #{video.userConfirmId}, #{video.taskId}, #{video.duration})
        </foreach>
    </insert>

    <select id="getVideoList" resultMap="BaseVideoMap">
        select * from video where task_id = #{taskId}
    </select>

    <update id="updateVideos" >
        update video
        <trim prefix="set" suffixOverrides=",">
            <trim prefix="video_thumb = case" suffix="end,">
                <foreach collection="videos" item="video" index="index">
                    when video_id=#{video.videoId} then #{video.videoThumb}
                </foreach>
            </trim>
        </trim>
        where video_id in
        <choose>
            <when test="videos.size() > 0">
                <foreach collection="videos" index="index" item="video" separator="," open="(" close=")">
                    #{video.videoId,jdbcType=BIGINT}
                </foreach>
            </when>
            <otherwise>
                (null)
            </otherwise>
        </choose>
    </update>

    <select id="getDataIds" resultType="Long">
        select data_id from videodata where user_id = #{userId} and video_id = #{videoId}
    </select>

    <delete id="deleteVideoData">
        delete from videodata where video_id = #{videoId} and user_id = #{userId}
    </delete>

    <delete id="deleteFinishById">
        delete from userfinished where user_id = #{userId} and image_id = #{videoId}
    </delete>

    <insert id="finishVideo">
        insert into userfinished(user_id, task_id, image_id) values (#{userId}, #{videoId})
    </insert>

    <insert id="addData">
        insert into videodata(user_id, label_id, type, video_id, start_time, end_time,sentence) values
        <foreach collection="videoDatas" item="p" separator=",">
            (#{userId}, #{p.labelId}, #{p.type}, #{videoId}, #{p.startTime}, #{p.endTime}, #{p.sentence})
        </foreach>
    </insert>

    <select id="getVideo" parameterType="Long" resultMap="BaseVideoMap">
        select * from video where video_id = #{videoId}
    </select>

    <select id="getVideoData" resultMap="BaseVideoDataMap">
        select * from videodata where video_id = #{videoId} and user_id = #{userId}
    </select>

    <update id="setVideoFinalVersion" >
        update video set user_confirm_id = #{userConfirmId} where video_id = #{videoId}
    </update>

    <select id="getVideoIds" parameterType="Long" resultType="Long">
        select video_id from video where task_id = #{taskId}
    </select>

    <select id="getDataIdsByVideoId" resultType="Long">
        select data_id from videodata where video_id in
        <choose>
            <when test="videoIds.size() > 0">
                <foreach collection="videoIds" open="(" separator="," close=")" item="videoId">
                    #{videoId}
                </foreach>
            </when>
            <otherwise>
                (null)
            </otherwise>
        </choose>
    </select>

    <delete id="deleteVideosByTaskId" parameterType="Long">
        delete from video where task_id = #{taskId}
    </delete>

    <delete id="deleteDatasByVideoId" >
        delete from videodata where video_id in
        <foreach collection="videoIds" item="videoIds" open="(" separator="," close=")">
            #{videoIds}
        </foreach>
    </delete>

    <update id="updateVideoTaskId">
        update video set task_id = #{taskId} where video_id in
        <foreach collection="videos" item="video" open="(" close=")" separator=",">
            #{video.videoId}
        </foreach>
    </update>
</mapper>