<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.uestc.labelproject.dao.AdminImageMapper">
    <resultMap id="BaseResultMap" type="com.uestc.labelproject.entity.Image">
        <id column="image_id" jdbcType="BIGINT" property="imageId" />
        <result column="image_name" jdbcType="VARCHAR" property="imageName" />
        <result column="image_thumb" jdbcType="VARCHAR" property="imageThumb" />
        <result column="user_confirm_id" jdbcType="BIGINT" property="userConfirmId"/>
        <result column="task_id" jdbcType="BIGINT" property="taskId"/>
        <result column="width" jdbcType="INTEGER" property="width"/>
        <result column="height" jdbcType="INTEGER" property="height"/>
    </resultMap>
    <resultMap id="BaseDataMap" type="com.uestc.labelproject.entity.Data">
        <id column="data_id" jdbcType="BIGINT" property="dataId" />
        <result column="image_id" jdbcType="BIGINT" property="imageId" />
        <result column="label_id" jdbcType="BIGINT" property="labelId" />
        <result column="user_id" jdbcType="BIGINT" property="userId"/>
        <result column="data_desc" jdbcType="VARCHAR" property="dataDesc"/>
        <result column="label_type" jdbcType="INTEGER" property="labelType"/>
        <result column="iscrowd" jdbcType="INTEGER" property="iscrowd"/>
        <collection property="point" ofType="com.uestc.labelproject.entity.Point">
            <result column="order" jdbcType="INTEGER" property="order"/>
            <result column="x" jdbcType="DOUBLE" property="x"/>
            <result column="y" jdbcType="DOUBLE" property="y"/>
        </collection>
    </resultMap>
    <resultMap id="TempRleMap" type="com.uestc.labelproject.entity.TempRleData">
        <result column="data_id" jdbcType="BIGINT" property="dataId"/>
        <result column="data_rle" jdbcType="VARCHAR" property="data"/>
    </resultMap>

    <sql id="insertKey">
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="imageName != null">
                image_name,
            </if>
            <if test="imageThumb != null">
                image_thumb,
            </if>
            <if test="userConfirmId != null">
                user_confirm_id,
            </if>
            <if test="taskId != null">
                task_id,
            </if>
        </trim>
    </sql>
    <sql id="insertValue">
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="imageName != null">
                #{imageName},
            </if>
            <if test="imageThumb != null">
                #{imageThumb},
            </if>
            <if test="userConfirmId != null">
                #{userConfirmId},
            </if>
            <if test="taskId != null">
                #{taskId},
            </if>
        </trim>
    </sql>
    <insert id="addImage" parameterType="com.uestc.labelproject.entity.Image">
        <selectKey keyProperty="imageId" order="AFTER" resultType="java.lang.Long">
            SELECT  LAST_INSERT_ID()
        </selectKey>
        insert into image <include refid="insertKey"/> <include refid="insertValue"/>
    </insert>
    <insert id="addImages">
        insert into image(image_name, image_thumb, user_confirm_id, task_id) VALUES
        <foreach collection="images" item="image" separator=",">
            (#{image.imageName}, #{image.imageThumb}, #{image.userConfirmId},#{image.taskId})
        </foreach>
    </insert>
    <select id="getImageList" resultMap="BaseResultMap" parameterType="Long">
        select * from image where task_id = #{taskId}
    </select>
    
    <update id="updateImages">
        update image
        <trim prefix="set" suffixOverrides=",">
            <trim prefix="image_thumb = case" suffix="end,">
                <foreach collection="images" item="image" index="index">
                    when image_id=#{image.imageId} then #{image.imageThumb}
                </foreach>
            </trim>
        </trim>
        where image_id in
        <choose>
            <when test="images.size() > 0">
                <foreach collection="images" index="index" item="image" separator="," open="(" close=")">
                    #{image.imageId,jdbcType=BIGINT}
                </foreach>
            </when>
            <otherwise>
                (null)
            </otherwise>
        </choose>

    </update>

    <select id="getDataIds" resultType="Long">
        select data_id from imagedata where image_id = #{imageId} and user_id = #{userId}
    </select>
    
    <delete id="deleteDatas">
        delete from imagedata  where image_id = #{imageId} and user_id = #{userId}
    </delete>
    
    <delete id="deletePoint">
        delete from imagedatapoints
        where user_id = #{userId} and image_id = #{imageId}
    </delete>

    <insert id="addData" parameterType="com.uestc.labelproject.entity.Data">
        <selectKey keyProperty="data.dataId" order="AFTER" resultType="java.lang.Long">
            SELECT  LAST_INSERT_ID()
        </selectKey>
        insert into imagedata(image_id, label_id, user_id, data_desc, label_type, iscrowd) values (#{imageId}, #{data.labelId}, #{userId}, #{data.dataDesc},#{data.labelType}, #{data.iscrowd})
    </insert>

    <insert id="addPoint" parameterType="com.uestc.labelproject.entity.Data">
        insert into imagedatapoints(data_id,`order`, x, y, user_id, image_id) values
        <foreach collection="data.point" item="p" separator=",">
            (#{data.dataId}, #{p.order}, #{p.x}, #{p.y}, #{userId}, #{imageId})
        </foreach>
    </insert>

    <select id="getDatas" resultMap="BaseDataMap">
        select d.*,
               dp.order,
               dp.x,
               dp.y from imagedata d
        left join imagedatapoints dp on dp.data_id = d.data_id
        where d.user_id = #{userId} and d.image_id = #{imageId}
    </select>
    <select id="getImage" parameterType="Long" resultMap="BaseResultMap">
        select * from image where image_id = #{imageId}
    </select>
    <update id="editImageByImageId">
        update image set image_name = #{imageName} where image_id = #{imageId}
    </update>
    <update id="setFinalVersion">
        update image set user_confirm_id = #{userConfirmId} where image_id = #{imageId}
    </update>
    <insert id="finish" >
        insert into userfinished(user_id, task_id, image_id) values (#{userId},(select task_id from image where image.image_id = #{imageId}), #{imageId})
    </insert>
    <select id="getImageIds" resultType="Long" parameterType="Long">
        select image_id from image where task_id = #{taskId}
    </select>
    <select id="getDataIdsByImageId" resultType="Long">
        select data_id from imagedata where image_id in
        <choose>
            <when test="imageIds.size() > 0">
                <foreach collection="imageIds" open="(" separator="," close=")" item="imageId">
                    #{imageId}
                </foreach>
            </when>
            <otherwise>
                (null)
            </otherwise>
        </choose>

    </select>

    <delete id="deleteImagesByTaskId" parameterType="Long">
        delete from image where task_id = #{taskId}
    </delete>
    <delete id="deleteDatasByImageId" >
        delete from imagedata where image_id in
        <foreach collection="imageIds" item="imageId" open="(" separator="," close=")">
            #{imageId}
        </foreach>
    </delete>

    <delete id="deleteFromImageByImageId" parameterType="Long">
        delete from image where image_id = #{imageId}
    </delete>

    <delete id="deleteFromImageDataByImageId" parameterType="Long">
        delete from imagedata where image_id = #{imageId}
    </delete>

    <delete id="deleteFromImageDataPointsByImageId" parameterType="Long">
        delete from imagedatapoints where image_id = #{imageId}
    </delete>

    <delete id="deletePoints" >
        delete from imagedatapoints where data_id in
        <foreach collection="dataIds" item="dataId" open="(" separator="," close=")">
            #{dataId}
        </foreach>
    </delete>

    <delete id="deleteFinish" parameterType="Long">
        delete from userfinished where task_id = #{taskId}
    </delete>

    <select id="getLabeledImageIds" resultType="Long" >
        select image_id from userfinished
        where task_id = #{taskId}
        <if test="userId != null">
            and user_id = #{userId}
        </if>
    </select>

    <delete id="deleteFinishById" >
        delete from userfinished where user_id = #{userId} and image_id = #{imageId}
    </delete>

    <update id="updateImagesTaskId">
        update image set task_id = #{taskId} where image_id in
        <foreach collection="images" item="image" open="(" close=")" separator=",">
            #{image.imageId}
        </foreach>

    </update>

    <update id="updateImageWH" parameterType="com.uestc.labelproject.entity.Image">
        update image
        <set>
            <if test="width != null">
                width = #{width},
            </if>
            <if test="height != null">
                height = #{height},
            </if>
        </set>
        where image_id = #{imageId}
    </update>

    <delete id="deleteRle">
        delete from imagedatarle where image_id = #{imageId} and user_id = #{userId}
    </delete>

    <insert id="addRle">
        insert into imagedatarle(data_id, image_id, user_id, data_rle) values
        <foreach collection="tempRleDatas" item="data" separator=",">
            (#{data.dataId}, #{imageId}, #{userId}, #{data.data})
        </foreach>
    </insert>

    <select id="getTempRleData" resultMap="TempRleMap">
        select data_id,data_rle from imagedatarle where data_id = #{dataId}
    </select>

    <update id="deleteFinalVersion" parameterType="Long">
        update image set user_confirm_id = null where image_id = #{image_id}
    </update>
</mapper>